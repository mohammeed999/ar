{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/noto_sans_arabic_92a9f564.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"noto_sans_arabic_92a9f564-module__C_bq9W__className\",\n  \"variable\": \"noto_sans_arabic_92a9f564-module__C_bq9W__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/noto_sans_arabic_92a9f564.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Noto_Sans_Arabic%22,%22arguments%22:[{%22variable%22:%22--font-noto-sans-arabic%22,%22subsets%22:[%22arabic%22],%22weight%22:[%22400%22,%22500%22,%22600%22,%22700%22]}],%22variableName%22:%22notoSansArabic%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Noto Sans Arabic', 'Noto Sans Arabic Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://D%3A/2025/ai/arabai/src/contexts/AuthContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthContext.tsx <module evaluation>\",\n    \"AuthProvider\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthContext.tsx <module evaluation>\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,8DACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file://D%3A/2025/ai/arabai/src/contexts/AuthContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AuthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthContext.tsx\",\n    \"AuthProvider\",\n);\nexport const useAuth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/contexts/AuthContext.tsx\",\n    \"useAuth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,0CACA","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://D%3A/2025/ai/arabai/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Noto_Sans_Arabic } from \"next/font/google\";\nimport \"./globals.css\";\nimport { AuthProvider } from \"@/contexts/AuthContext\";\n\nconst notoSansArabic = Noto_Sans_Arabic({\n  variable: '--font-noto-sans-arabic',\n  subsets: ['arabic'],\n  weight: ['400', '500', '600', '700'],\n});\n\nexport const metadata: Metadata = {\n  title: \"عَرَبَاي | ArabAi\",\n  description: \"أول منصة عمل عربية تجمع طالبي خدمات الذكاء الاصطناعي بالمصممين والمبرمجين\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"ar\" dir=\"rtl\">\n      <body\n        className={`${notoSansArabic.variable} font-sans antialiased bg-gray-50`}\n      >\n        <AuthProvider>\n          {children}\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA;;;;;AAQO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAK,KAAI;kBAClB,cAAA,8OAAC;YACC,WAAW,GAAG,oJAAA,CAAA,UAAc,CAAC,QAAQ,CAAC,iCAAiC,CAAC;sBAExE,cAAA,8OAAC,+HAAA,CAAA,eAAY;0BACV;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file://D%3A/2025/ai/arabai/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}