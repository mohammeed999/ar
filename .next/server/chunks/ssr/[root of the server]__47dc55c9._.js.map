{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/2025/ai/arabai/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\n// نوع بيانات المستخدم\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: 'admin' | 'provider' | 'client';\r\n  avatar?: string;\r\n  isVerified: boolean;\r\n}\r\n\r\n// نوع بيانات سياق المصادقة\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  googleLogin: () => Promise<boolean>;\r\n  signup: (name: string, email: string, password: string, role: 'provider' | 'client') => Promise<boolean>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n  isProvider: boolean;\r\n  isClient: boolean;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n}\r\n\r\n// إنشاء سياق المصادقة\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// مزود سياق المصادقة\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  // التحقق من حالة المصادقة عند تحميل الصفحة\r\n  useEffect(() => {\r\n    // محاكاة التحقق من المصادقة\r\n    const checkAuth = async () => {\r\n      try {\r\n        // في الإنتاج، هنا يتم إرسال طلب إلى API للتحقق من الجلسة\r\n        const storedUser = localStorage.getItem('user');\r\n        \r\n        if (storedUser) {\r\n          setUser(JSON.parse(storedUser));\r\n        }\r\n      } catch (err) {\r\n        console.error('Error checking authentication:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // وظيفة تسجيل الدخول\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // محاكاة عملية تسجيل الدخول (في الإنتاج، هنا يتم إرسال طلب إلى API)\r\n      await new Promise(resolve => setTimeout(resolve, 800)); // تأخير لمحاكاة الشبكة\r\n      \r\n      // تحديد نوع المستخدم بناءً على البريد الإلكتروني (للعرض التوضيحي فقط)\r\n      let role: 'admin' | 'provider' | 'client' = 'client';\r\n      \r\n      if (email.includes('admin')) {\r\n        role = 'admin';\r\n      } else if (email.includes('provider')) {\r\n        role = 'provider';\r\n      }\r\n      \r\n      const userData: User = {\r\n        id: Math.random().toString(36).substring(2),\r\n        name: email.split('@')[0],\r\n        email,\r\n        role,\r\n        isVerified: true,\r\n        avatar: role === 'admin' \r\n          ? '/images/avatars/admin-avatar.jpg' \r\n          : role === 'provider' \r\n            ? '/images/avatars/provider-avatar.jpg' \r\n            : '/images/avatars/client-avatar.jpg'\r\n      };\r\n      \r\n      // حفظ بيانات المستخدم\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError('فشل تسجيل الدخول. يرجى التحقق من بيانات الاعتماد الخاصة بك.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // وظيفة تسجيل الدخول باستخدام جوجل\r\n  const googleLogin = async (): Promise<boolean> => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // محاكاة عملية تسجيل الدخول بواسطة جوجل (في الإنتاج، هنا يتم التفاعل مع API جوجل)\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // تأخير لمحاكاة الشبكة\r\n      \r\n      const userData: User = {\r\n        id: 'google-' + Math.random().toString(36).substring(2),\r\n        name: 'مستخدم جوجل',\r\n        email: 'user@gmail.com',\r\n        role: 'client', // افتراضياً المستخدمين الجدد من جوجل هم عملاء\r\n        isVerified: true,\r\n        avatar: '/images/avatars/google-avatar.jpg'\r\n      };\r\n      \r\n      // حفظ بيانات المستخدم\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError('فشل تسجيل الدخول باستخدام جوجل. يرجى المحاولة مرة أخرى.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // وظيفة إنشاء حساب جديد\r\n  const signup = async (\r\n    name: string, \r\n    email: string, \r\n    password: string, \r\n    role: 'provider' | 'client'\r\n  ): Promise<boolean> => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // محاكاة عملية إنشاء حساب (في الإنتاج، هنا يتم إرسال طلب إلى API)\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // تأخير لمحاكاة الشبكة\r\n      \r\n      const userData: User = {\r\n        id: Math.random().toString(36).substring(2),\r\n        name,\r\n        email,\r\n        role,\r\n        isVerified: false,\r\n        avatar: role === 'provider' \r\n          ? '/images/avatars/provider-avatar.jpg' \r\n          : '/images/avatars/client-avatar.jpg'\r\n      };\r\n      \r\n      // في الإنتاج لا نقوم بتسجيل الدخول تلقائياً، بل ننتظر تأكيد البريد الإلكتروني\r\n      // لكن هنا سنتخطى هذه الخطوة للعرض التوضيحي\r\n      \r\n      // حفظ بيانات المستخدم\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError('فشل إنشاء الحساب. يرجى المحاولة مرة أخرى.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // وظيفة تسجيل الخروج\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n    router.push('/');\r\n  };\r\n\r\n  const register = async (name: string, email: string, password: string) => {\r\n    try {\r\n      // هنا يمكنك إضافة طلب API حقيقي\r\n      const mockUser: User = {\r\n        id: '1',\r\n        name,\r\n        email,\r\n        role: 'client',\r\n        isVerified: false,\r\n      };\r\n      setUser(mockUser);\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n    } catch (error) {\r\n      throw new Error('فشل التسجيل');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    googleLogin,\r\n    signup,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    isProvider: user?.role === 'provider',\r\n    isClient: user?.role === 'client',\r\n    register,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n// هوك استخدام سياق المصادقة\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file://D%3A/2025/ai/arabai/src/components/Navbar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline';\r\n\r\nexport default function Navbar() {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const pathname = usePathname();\r\n  const { user, isAuthenticated, logout } = useAuth();\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  // تغيير حالة القائمة عند التمرير\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const isScrolled = window.scrollY > 10;\r\n      if (isScrolled !== scrolled) {\r\n        setScrolled(isScrolled);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      document.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [scrolled]);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  const isActive = (path: string) => {\r\n    return pathname === path;\r\n  };\r\n\r\n  const navLinks = [\r\n    { name: 'الرئيسية', path: '/' },\r\n    { name: 'الخدمات', path: '/services' },\r\n    { name: 'المزودون', path: '/providers' },\r\n    { name: 'المدونة', path: '/blog' },\r\n    { name: 'المساعدة', path: '/help' },\r\n  ];\r\n\r\n  return (\r\n    <nav className={`fixed w-full top-0 z-50 transition-all duration-300 ${scrolled ? 'bg-white shadow-md py-2' : 'bg-white/90 py-4'}`}>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          {/* الشعار */}\r\n          <div className=\"flex-shrink-0\">\r\n            <Link href=\"/\" className=\"flex items-center\">\r\n              <h1 className=\"text-2xl font-bold text-indigo-600\">عرب<span className=\"text-green-500\">AI</span></h1>\r\n            </Link>\r\n          </div>\r\n\r\n          {/* الروابط - للشاشات الكبيرة */}\r\n          <div className=\"hidden md:block\">\r\n            <div className=\"ml-10 flex items-center space-x-4 space-x-reverse\">\r\n              {navLinks.map((link) => (\r\n                <Link\r\n                  key={link.path}\r\n                  href={link.path}\r\n                  className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                    isActive(link.path)\r\n                      ? 'text-indigo-600 bg-indigo-50'\r\n                      : 'text-gray-700 hover:bg-indigo-50 hover:text-indigo-600'\r\n                  }`}\r\n                >\r\n                  {link.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* أزرار تسجيل الدخول والتسجيل */}\r\n          <div className=\"hidden md:flex items-center space-x-4 space-x-reverse\">\r\n            {isAuthenticated ? (\r\n              <>\r\n                <Link\r\n                  href=\"/dashboard\"\r\n                  className=\"px-4 py-2 text-sm font-medium text-indigo-600 hover:text-indigo-700\"\r\n                >\r\n                  لوحة التحكم\r\n                </Link>\r\n                <button\r\n                  onClick={logout}\r\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-900\"\r\n                >\r\n                  تسجيل الخروج\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link\r\n                  href=\"/login\"\r\n                  className=\"px-4 py-2 text-sm font-medium text-indigo-600 hover:text-indigo-700\"\r\n                >\r\n                  تسجيل الدخول\r\n                </Link>\r\n                <Link\r\n                  href=\"/signup\"\r\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-indigo-600 to-blue-500 hover:from-indigo-700 hover:to-blue-600 rounded-md shadow-sm hover:shadow-md transition-all\"\r\n                >\r\n                  التسجيل\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* زر القائمة للجوال */}\r\n          <div className=\"md:hidden\">\r\n            <button\r\n              onClick={toggleMenu}\r\n              className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-indigo-600 hover:bg-indigo-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\r\n            >\r\n              <span className=\"sr-only\">فتح القائمة الرئيسية</span>\r\n              {isMenuOpen ? (\r\n                <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n              ) : (\r\n                <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* قائمة الجوال */}\r\n      {isMenuOpen && (\r\n        <div className=\"md:hidden bg-white\">\r\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\r\n            {navLinks.map((link) => (\r\n              <Link\r\n                key={link.path}\r\n                href={link.path}\r\n                className={`block px-3 py-2 rounded-md text-base font-medium ${\r\n                  isActive(link.path)\r\n                    ? 'text-indigo-600 bg-indigo-50'\r\n                    : 'text-gray-700 hover:bg-indigo-50 hover:text-indigo-600'\r\n                }`}\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                {link.name}\r\n              </Link>\r\n            ))}\r\n            {isAuthenticated ? (\r\n              <>\r\n                <Link\r\n                  href=\"/dashboard\"\r\n                  className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-600 hover:bg-indigo-50\"\r\n                  onClick={() => setIsMenuOpen(false)}\r\n                >\r\n                  لوحة التحكم\r\n                </Link>\r\n                <button\r\n                  onClick={() => {\r\n                    logout();\r\n                    setIsMenuOpen(false);\r\n                  }}\r\n                  className=\"block w-full text-right px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:bg-indigo-50 hover:text-indigo-600\"\r\n                >\r\n                  تسجيل الخروج\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link\r\n                  href=\"/login\"\r\n                  className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-600 hover:bg-indigo-50\"\r\n                  onClick={() => setIsMenuOpen(false)}\r\n                >\r\n                  تسجيل الدخول\r\n                </Link>\r\n                <Link\r\n                  href=\"/signup\"\r\n                  className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-gradient-to-r from-indigo-600 to-blue-500 hover:from-indigo-700 hover:to-blue-600 my-2\"\r\n                  onClick={() => setIsMenuOpen(false)}\r\n                >\r\n                  التسجيل\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}